* Lisp interpreter
- Will support emacs lisp
- Built in lsp
- Json rpc to communicate with node.js
- support for vscode plugins
- piece table for buffer representation
- Build in rust
- As quick as possible(LLVM or bytecode?)
- Introspectable
- High amount of configuration
- FFI
- Perhaps interlope with v8/node.js via rpc?
* Lexer
First step will be to build a lexer. Here is a list of tokens which we will need:
- (
- )
- [
- ]
- atom
- empty
- EOL
- EOF
- +
- -
- /
- *
- 
* Grammar
** First possible choice
s_expression = atomic_symbol \
               / "(" s_expression "."s_expression ")" \
               / list 
   
list = "(" s_expression < s_expression > ")"

atomic_symbol = letter atom_part

atom_part = empty / letter atom_part / number atom_part

letter = "a" / "b" / " ..." / "z"

number = "1" / "2" / " ..." / "9"

empty = " "

